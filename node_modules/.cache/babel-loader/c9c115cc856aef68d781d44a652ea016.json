{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\WE\\\\OurOneNote\\\\src\\\\components\\\\Canvas.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Canvas() {\n  _s();\n\n  const [isDrawing, setIsDrawing] = useState(false);\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [width, setWidth] = useState(1440);\n  const [height, setHeight] = useState(585);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    const context = canvas.getContext(\"2d\");\n    context.scale(2, 2);\n    context.lineCap = \"round\";\n    context.strokeStyle = \"black\";\n    context.lineWidth = 5;\n    contextRef.current = context;\n  }, []);\n\n  const startDrawing = ({\n    nativeEvent\n  }) => {\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  const finishDrawing = () => {\n    contextRef.current.closePath();\n    setIsDrawing(false);\n  };\n\n  const draw = ({\n    nativeEvent\n  }) => {\n    if (!isDrawing) {\n      return;\n    }\n\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxHeight: \"585px\",\n      maxWidth: \"1040px\",\n      overflow: \"auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"canvas\",\n      width: width * 2,\n      height: height * 2,\n      onMouseDown: startDrawing,\n      onMouseUp: finishDrawing,\n      onMouseMove: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Canvas, \"LGl5HXqJLzWJ22QV3SF2VmyVd40=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["D:/Programs/WE/OurOneNote/src/components/Canvas.jsx"],"names":["React","useState","useRef","useEffect","Canvas","isDrawing","setIsDrawing","canvasRef","contextRef","width","setWidth","height","setHeight","canvas","current","style","context","getContext","scale","lineCap","strokeStyle","lineWidth","startDrawing","nativeEvent","offsetX","offsetY","beginPath","moveTo","finishDrawing","closePath","draw","lineTo","stroke","maxHeight","maxWidth","overflow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAEd,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMM,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMM,UAAU,GAAGN,MAAM,CAAC,IAAD,CAAzB;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,GAAD,CAApC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,MAAM,GAAGN,SAAS,CAACO,OAAzB;AAEAD,IAAAA,MAAM,CAACE,KAAP,CAAaN,KAAb,GAAsB,GAAEA,KAAM,IAA9B;AACAI,IAAAA,MAAM,CAACE,KAAP,CAAaJ,MAAb,GAAuB,GAAEA,MAAO,IAAhC;AAEA,UAAMK,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAhB;AACAD,IAAAA,OAAO,CAACE,KAAR,CAAc,CAAd,EAAiB,CAAjB;AACAF,IAAAA,OAAO,CAACG,OAAR,GAAkB,OAAlB;AACAH,IAAAA,OAAO,CAACI,WAAR,GAAsB,OAAtB;AACAJ,IAAAA,OAAO,CAACK,SAAR,GAAoB,CAApB;AACAb,IAAAA,UAAU,CAACM,OAAX,GAAqBE,OAArB;AACH,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMM,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAqB;AAEtC,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuBF,WAA7B;AACAf,IAAAA,UAAU,CAACM,OAAX,CAAmBY,SAAnB;AACAlB,IAAAA,UAAU,CAACM,OAAX,CAAmBa,MAAnB,CAA0BH,OAA1B,EAAmCC,OAAnC;AACAnB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAND;;AAQA,QAAMsB,aAAa,GAAG,MAAM;AACxBpB,IAAAA,UAAU,CAACM,OAAX,CAAmBe,SAAnB;AACAvB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAKA,QAAMwB,IAAI,GAAG,CAAC;AAAEP,IAAAA;AAAF,GAAD,KAAqB;AAC9B,QAAI,CAAClB,SAAL,EAAgB;AACZ;AACH;;AACD,UAAM;AAAEmB,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuBF,WAA7B;AAEAf,IAAAA,UAAU,CAACM,OAAX,CAAmBiB,MAAnB,CAA0BP,OAA1B,EAAmCC,OAAnC;AACAjB,IAAAA,UAAU,CAACM,OAAX,CAAmBkB,MAAnB;AAEH,GATD;;AAaA,sBAAO;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,OAAb;AAAsBC,MAAAA,QAAQ,EAAE,QAAhC;AAA0CC,MAAAA,QAAQ,EAAE;AAApD,KAAZ;AAAA,2BACH;AACI,MAAA,GAAG,EAAE5B,SADT;AAEI,MAAA,EAAE,EAAC,QAFP;AAGI,MAAA,KAAK,EAAEE,KAAK,GAAG,CAHnB;AAII,MAAA,MAAM,EAAEE,MAAM,GAAG,CAJrB;AAKI,MAAA,WAAW,EAAEW,YALjB;AAMI,MAAA,SAAS,EAAEM,aANf;AAOI,MAAA,WAAW,EAAEE;AAPjB;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH;;GA/DQ1B,M;;KAAAA,M;AAiET,eAAeA,MAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nfunction Canvas() {\r\n\r\n    const [isDrawing, setIsDrawing] = useState(false)\r\n\r\n    const canvasRef = useRef(null);\r\n    const contextRef = useRef(null);\r\n\r\n    const [width, setWidth] = useState(1440);\r\n    const [height, setHeight] = useState(585);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current\r\n\r\n        canvas.style.width = `${width}px`;\r\n        canvas.style.height = `${height}px`;\r\n\r\n        const context = canvas.getContext(\"2d\")\r\n        context.scale(2, 2);\r\n        context.lineCap = \"round\";\r\n        context.strokeStyle = \"black\";\r\n        context.lineWidth = 5;\r\n        contextRef.current = context;\r\n    }, []);\r\n\r\n    const startDrawing = ({ nativeEvent }) => {\r\n\r\n        const { offsetX, offsetY } = nativeEvent;\r\n        contextRef.current.beginPath();\r\n        contextRef.current.moveTo(offsetX, offsetY);\r\n        setIsDrawing(true);\r\n    };\r\n\r\n    const finishDrawing = () => {\r\n        contextRef.current.closePath();\r\n        setIsDrawing(false);\r\n    };\r\n\r\n    const draw = ({ nativeEvent }) => {\r\n        if (!isDrawing) {\r\n            return;\r\n        }\r\n        const { offsetX, offsetY } = nativeEvent;\r\n\r\n        contextRef.current.lineTo(offsetX, offsetY);\r\n        contextRef.current.stroke();\r\n\r\n    };\r\n\r\n\r\n\r\n    return <div style={{ maxHeight: \"585px\", maxWidth: \"1040px\", overflow: \"auto\" }}>\r\n        <canvas\r\n            ref={canvasRef}\r\n            id=\"canvas\"\r\n            width={width * 2}\r\n            height={height * 2}\r\n            onMouseDown={startDrawing}\r\n            onMouseUp={finishDrawing}\r\n            onMouseMove={draw}\r\n        >\r\n\r\n        </canvas>\r\n    </div>\r\n}\r\n\r\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}